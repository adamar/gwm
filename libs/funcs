#!/usr/bin/env bash


####################
# Common Functions #
####################


_menu() {

  case "$1" in
    -i|--init)
      _init
    ;;
    -v|--version)
      _version
    ;;
    -r|--remove)
      _remove
    ;;
    -f|--fix)
      _fix
    ;;
    -v|--list)
      _list
    ;;
    -h|--help)
      _usage
    ;;
    -*|--*)
      echo "Unknown option $1"
    ;;
    "")
      _usage
    ;;
  esac

}


_usage() {
  cat <<EOF
  GWM is a tool for managing Go workspaces.

  Usage:

        gwm [flags]

  The flags are:

    --init      Initialize a new Go Workspace
    --remove    Remove a workspace
    --version   Print version number
    --fix       Fix a workspace
    --list      List all managed workspaces
    --help      This listing
  
EOF
}


error(){
    echo -e "\e[91m# ${1}\033[0m"
}


msg(){
    echo -e "\e[34m# ${1}\033[0m"
}


_init() {

  CURR=`pwd`
  if [[ $(grep $CURR "$HOME/.gwm/state/paths.bash") ]]; then
    error "This appears to be a GWM managed directory already!"
  else
    echo $CURR >> "$HOME/.gwm/state/paths.bash"
    echo $CURR
    echo $HOME/.gwm
    mkdir "_src"
    msg "Initialize a new Go Workspace"
  fi

}


_version() {

  msg "Version 0.1"

}


_goversion() {

  version=$(go version)
  regex="(go[0-9].[0-9].[0-9])"
  if [[ $version =~ $regex ]]; then 
    msg ${BASH_REMATCH[1]}
  fi

}


_start() {

  if [[ -z "$rvm_path" ]]; then
    error "Not properly tested alongside RVM"
  fi

}



_remove() {

  error "Sorry, not yet implemented"

}


_fix() {

  error "Sorry, not yet implemented"

}


_list() {

  error "Sorry, not yet implemented"

}

